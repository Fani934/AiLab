from sklearn.neighbors import KNeighborsClassifier
from scipy.spatial import distance
import numpy as np

X = np.array([
    [10, 9],
    [8, 6],
    [4, 7],
    [6, 5]
])
y = np.array(["Bad", "Bad", "Good", "Good"])

query_instance = np.array([[3, 7]])

distances = [distance.euclidean(query_instance[0], x) for x in X]
distance_class_pairs = sorted(zip(distances, y))

print("Distances and Classifications:")
for d, c in distance_class_pairs:
    print(f"Distance: {d:.2f}, Classification: {c}")

k = 3
nearest_neighbors = distance_class_pairs[:k]
predicted_class = max(set([c for _, c in nearest_neighbors]), key=[c for _, c in nearest_neighbors].count)

print("\nNearest Neighbors (K=3):", nearest_neighbors)
print(f"Predicted Classification for the query instance (3, 7): {predicted_class}")
