import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix, accuracy_score

# Data from the image
X = np.array([
    [7, 7],
    [7, 4],
    [3, 4],
    [1, 4]
])

y = np.array([0, 0, 1, 1])  # 0 = Bad, 1 = Good

# Train the Decision Tree model
clf = DecisionTreeClassifier()
clf.fit(X, y)

# Predictions on the training data
y_pred = clf.predict(X)

# Confusion Matrix and Accuracy
conf_matrix = confusion_matrix(y, y_pred)
accuracy = accuracy_score(y, y_pred)

print("Confusion Matrix:")
print(conf_matrix)
print("Accuracy of the Model:", accuracy)

# Adding a new entry dynamically
new_x1 = int(input("Enter Acid Durability (sec): "))
new_x2 = int(input("Enter Strength (kg/m²): "))

new_entry = np.array([[new_x1, new_x2]])
new_prediction = clf.predict(new_entry)
new_class = "Good" if new_prediction[0] == 1 else "Bad"

print("Prediction for New Entry:", new_class)